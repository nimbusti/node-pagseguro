// Generated by CoffeeScript 1.6.3
(function() {
  var pagseguro, req, xml, xml2json;

  xml = require('jstoxml');

  req = require('request');

  xml2json = require("node-xml2json");

  pagseguro = (function() {
    function pagseguro(email, token) {
      this.email = email;
      this.token = token;
      this.obj = new Object;
      this.xml = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>';
      return this;
    }

    pagseguro.prototype.currency = function(cur) {
      this.obj['currency'] = cur;
      return this;
    };

    pagseguro.prototype.reference = function(ref) {
      this.obj['reference'] = ref;
      return this;
    };

    pagseguro.prototype.addItem = function(item) {
      if (!this.obj['items']) {
        this.obj['items'] = new Array;
      }
      this.obj.items.push({
        item: item
      });
      return this;
    };

    pagseguro.prototype.buyer = function(obj) {
      this.obj['items'] = new Array;
      this.obj['sender'] = new Object;
      this.obj.sender['name'] = obj.name;
      this.obj.sender['email'] = obj.email;
      this.obj.sender['hash'] = obj.hash;
      this.obj.sender['phone'] = new Object;
      this.obj.sender.phone['areaCode'] = obj.phoneAreaCode;
      this.obj.sender.phone['number'] = obj.phoneNumber;
      return this;
    };

    pagseguro.prototype.extraAmount = function(obj) {
      this.obj['extraAmount'] = obj.extraAmount;
      return this;
    };

    pagseguro.prototype.addDocument = function(document) {
      if (!this.obj.sender['documents']) {
        this.obj.sender['documents'] = new Array;
      }
      this.obj.sender.documents.push({
        document: document
      });
      return this;
    };

    pagseguro.prototype.shipping = function(obj) {
      this.obj['shipping'] = new Object;
      this.obj.shipping['type'] = obj.shippingType;
      this.obj.shipping['cost'] = obj.shippingCost;
      this.obj.shipping['address'] = new Object;
      this.obj.shipping.address['street'] = obj.street;
      this.obj.shipping.address['number'] = obj.number;
      if (obj.complement) {
        this.obj.shipping.address['complement'] = obj.complement;
      }
      if (obj.district) {
        this.obj.shipping.address['district'] = obj.district;
      }
      this.obj.shipping.address['postalCode'] = obj.postalCode;
      this.obj.shipping.address['city'] = obj.city;
      this.obj.shipping.address['state'] = obj.state;
      this.obj.shipping.address['country'] = obj.country;
      return this;
    };

    pagseguro.prototype.creditCard = function(obj) {
      this.obj['mode'] = 'default';
      this.obj['method'] = 'creditCard';

      this.obj['creditCard'] = new Object;
      this.obj.creditCard['token'] = obj.creditCardToken;

      this.obj.creditCard['installment'] = new Object;
      this.obj.creditCard.installment['quantity'] = obj.installmentQuantity;
      this.obj.creditCard.installment['value'] = obj.installmentValue;

      this.obj.creditCard['holder'] = new Object;
      this.obj.creditCard.holder['name'] = obj.creditCardHolderName;
      this.obj.creditCard.holder['documents'] = new Array;
      this.obj.creditCard.holder['birthDate'] = obj.creditCardHolderBirthDate;
      this.obj.creditCard.holder['phone'] = new Object;
      this.obj.creditCard.holder.phone['areaCode'] = obj.creditCardHolderAreaCode;
      this.obj.creditCard.holder.phone['number'] = obj.creditCardHolderPhone;

      this.obj.creditCard['billingAddress'] = new Object;
      this.obj.creditCard.billingAddress['street'] = obj.billingAddressStreet;
      this.obj.creditCard.billingAddress['number'] = obj.billingAddressNumber;
      this.obj.creditCard.billingAddress['complement'] = obj.billingAddressComplement;
      this.obj.creditCard.billingAddress['district'] = obj.billingAddressDistrict;
      this.obj.creditCard.billingAddress['city'] = obj.billingAddressCity;
      this.obj.creditCard.billingAddress['state'] = obj.billingAddressState;
      this.obj.creditCard.billingAddress['country'] = "BRA";
      this.obj.creditCard.billingAddress['postalCode'] = obj.billingAddressPostalCode;
      return this;
    };

    //Exemplo de document: {type: 'CPF', value: '99999999999'}
    pagseguro.prototype.addHolderDocument = function(document) {
      if (!this.obj.creditCard.holder['documents']) {
        this.obj.creditCard.holder['documents'] = new Array;
      }
      this.obj.creditCard.holder.documents.push({
        document: document
      });
      return this;
    };



    /*
    Configura as URLs de retorno e de notificação por pagamento
    */


    pagseguro.prototype.setRedirectURL = function(url) {
      this.obj.redirectURL = url;
      return this;
    };

    pagseguro.prototype.setNotificationURL = function(url) {
      this.obj.notificationURL = url;
      return this;
    };

    pagseguro.prototype.send = function(callback) {
      var options;
      options = {
        uri: "https://ws.pagseguro.uol.com.br/v2/checkout?email=" + this.email + "&token=" + this.token,
        method: 'POST',
        headers: {
          'Content-Type': 'application/xml; charset=UTF-8'
        },
        body: this.xml + xml.toXML({
          checkout: this.obj
        })
      };
      return req(options, function(err, res, body) {
        if (err) {
          callback(err);
        }
        if (!err) {
          return callback(null, xml2json.parser( body ));
        }
      });
    };

    pagseguro.prototype.sendTransparent = function(callback) {
      var options;
      console.log(this.xml + xml.toXML({checkout: this.obj}));
      options = {
        uri: "https://ws.pagseguro.uol.com.br/v2/transactions?email=" + this.email + "&token=" + this.token,
        method: 'POST',
        headers: {
          'Content-Type': 'application/xml; charset=UTF-8'
        },
        body: this.xml + xml.toXML({
          payment: this.obj
        })
      };
      return req(options, function(err, res, body) {
        if (err) {
          callback(err);
        }
        if (!err) {
          return callback(null, xml2json.parser( body ));
        }
      });
    };


    pagseguro.prototype.getTransactionByNotificationCode = function(code, callback) {
      var options;
      options = {
        uri: "https://ws.pagseguro.uol.com.br/v2/transactions/notifications/" + code +
                "?email=" + this.email + "&token=" + this.token,
        method: 'GET',
        headers: {
          'Content-Type': 'application/xml; charset=UTF-8'
        },
        body: this.xml + xml.toXML({
          checkout: this.obj
        })
      };
      return req(options, function(err, res, body) {
        if (err) {
          callback(err);
        }
        if (!err) {
          return callback(null, xml2json.parser( body ));
        }
      });
    };

    pagseguro.prototype.getSessionId = function(callback) {
      var options;
      options = {
        uri: "https://ws.pagseguro.uol.com.br/v2/sessions?email=" + this.email + "&token=" + this.token,
        method: 'POST',
        headers: {
          'Content-Type': 'application/xml; charset=UTF-8'
        }
      };
      return req(options, function(err, res, body) {
        if (err) {
          callback(err);
        }
        if (!err) {
          return callback(null, xml2json.parser( body ));
        }
      });
    };

    return pagseguro;

  })();

  module.exports = pagseguro;

}).call(this);
